export const translations = {
    en: {
        success: {
            login: 'Successfully logged in.',
            logout: 'Successfully logged out.',
            create: 'Successfully created {name} {context}.',
            update: 'Successfully updated {context} with ID: {id}.',
            delete: 'Successfully deleted {context} with ID: {id}.',
            findById: 'Successfully fetched {context} with ID: {id}.',
            findBy: 'Successfully fetched {context} by {by}: {key}.',
            findAll: 'Successfully fetched all {context}s.',
            sendEmail: 'Successfully sent {type} email to {to} {object}.',
            assign: 'Successfully assigned {assigner} (ID: {assignerId}) to {assignTo} (ID: {assignToId}).',
            makePayment: 'Successfully processed payment of {amount} from {payer} to {payee}.',
            saveFile: 'Successfully saved {fileDescription} at {filePath}.',
            deleteFile: 'Successfully deleted {fileDescription} from {filePath}.',
            validationError: 'Validation failed.',
            unauthorizedRoute: 'You are not authorized to access this route.',
        },
        error: {
            login: 'Failed to log in.',
            logout: 'Failed to log out.',
            create: 'Failed to create {name} {context}.',
            update: 'Failed to update {context} with ID: {id}.',
            delete: 'Failed to delete {context} with ID: {id}.',
            findById: 'Failed to fetch {context} with ID: {id}.',
            findBy: 'Failed to fetch {context} by {by}: {key}.',
            findAll: 'Failed to fetch all {context}s.',
            sendEmail: 'Failed to send {type} email to {to} {object}.',
            assign: 'Failed to assign {assigner} (ID: {assignerId}) to {assignTo} (ID: {assignToId}).',
            makePayment: 'Failed to process payment of {amount} from {payer} to {payee}.',
            saveFile: 'Failed to save {fileDescription} at {filePath}.',
            deleteFile: 'Failed to delete {fileDescription} from {filePath}.',
            validationError: 'Validation failed.',
            unauthorizedRoute: 'You are not authorized to access this route.',
        },
        prismaErrors: {
            P2002: 'Unique constraint violation. The field must be unique.',
            P2025: 'Record not found. Please check the input.',
            P2016: 'Invalid or nonexistent record. Please verify your input.',
            P2003: 'Foreign key constraint failed.',
            default: 'An unknown database error occurred.',
        },
    },
    ar: {
        success: {
            login: 'تم تسجيل الدخول بنجاح.',
            logout: 'تم تسجيل الخروج بنجاح.',
            create: 'تم إنشاء {name} {context} بنجاح.',
            update: 'تم تحديث {context} برقم التعريف {id} بنجاح.',
            delete: 'تم حذف {context} برقم التعريف {id} بنجاح.',
            findById: 'تم جلب {context} برقم التعريف {id}.',
            findBy: 'تم جلب {context} بواسطة {by}: {key}.',
            findAll: 'تم جلب جميع {context}.',
            sendEmail: 'تم إرسال بريد إلكتروني {type} إلى {to} {object} بنجاح.',
            assign: 'تم تعيين {assigner} (رقم التعريف: {assignerId}) إلى {assignTo} (رقم التعريف: {assignToId}) بنجاح.',
            makePayment: 'تم معالجة دفعة بقيمة {amount} من {payer} إلى {payee} بنجاح.',
            saveFile: 'تم حفظ {fileDescription} في {filePath} بنجاح.',
            deleteFile: 'تم حذف {fileDescription} من {filePath} بنجاح.',
            validationError: 'فشل التحقق.',
            unauthorizedRoute: 'غير مصرح لك بالوصول إلى هذا الرابط.',
        },
        error: {
            login: 'فشل في تسجيل الدخول.',
            logout: 'فشل في تسجيل الخروج.',
            create: 'فشل في إنشاء {name} {context}.',
            update: 'فشل في تحديث {context} برقم التعريف {id}.',
            delete: 'فشل في حذف {context} برقم التعريف {id}.',
            findById: 'فشل في جلب {context} برقم التعريف {id}.',
            findBy: 'فشل في جلب {context} بواسطة {by}: {key}.',
            findAll: 'فشل في جلب جميع {context}.',
            sendEmail: 'فشل في إرسال بريد إلكتروني {type} إلى {to} {object}.',
            assign: 'فشل في تعيين {assigner} (رقم التعريف: {assignerId}) إلى {assignTo} (رقم التعريف: {assignToId}).',
            makePayment: 'فشل في معالجة دفعة بقيمة {amount} من {payer} إلى {payee}.',
            saveFile: 'فشل في حفظ {fileDescription} في {filePath}.',
            deleteFile: 'فشل في حذف {fileDescription} من {filePath}.',
            validationError: 'فشل التحقق.',
            unauthorizedRoute: 'غير مصرح لك بالوصول إلى هذا الرابط.',
        },
        prismaErrors: {
            P2002: 'انتهاك قيود الفريدة. يجب أن يكون الحقل فريدًا.',
            P2025: 'السجل غير موجود. يرجى التحقق من الإدخال.',
            P2016: 'السجل غير صالح أو غير موجود. يرجى التحقق من الإدخال.',
            P2003: 'فشل قيد المفتاح الخارجي.',
            default: 'حدث خطأ غير معروف في قاعدة البيانات.',
        },
    },
};
